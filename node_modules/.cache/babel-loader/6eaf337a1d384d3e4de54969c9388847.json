{"ast":null,"code":"import _classCallCheck from \"/home/pablow/Desktop/wbk/react-swapi-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pablow/Desktop/wbk/react-swapi-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pablow/Desktop/wbk/react-swapi-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pablow/Desktop/wbk/react-swapi-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pablow/Desktop/wbk/react-swapi-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/pablow/Desktop/wbk/react-swapi-app/src/CardComponent.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar CardComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardComponent, _Component);\n\n  function CardComponent() {\n    var _this;\n\n    _classCallCheck(this, CardComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CardComponent).call(this));\n    _this.state = {\n      species: ['Fetching species...'],\n      films: ['Loading films...']\n    };\n    return _this;\n  }\n\n  _createClass(CardComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // SPECIES //\n      fetch(this.props.species[0]).then(function (resp) {\n        return resp.json();\n      }).then(function (json) {\n        return _this2.setState({\n          species: json.name\n        });\n      }).catch(function (err) {\n        return console.log('ERROR FETCHING SPECIES', err);\n      }); // FILMS //\n\n      var filmsArray = [];\n      var fetchFilms = this.props.films.map(function (filmUrl, i) {\n        return fetch(filmUrl).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          filmsArray.push(\"0\".concat(data.episode_id, \" - \").concat(data.title));\n          filmsArray.sort();\n        });\n      });\n      Promise.all(fetchFilms).then(function (promisesArray) {\n        _this2.setState({\n          films: filmsArray\n        });\n      }).catch(function (err) {\n        return console.log('error: ', err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var name = this.props.name;\n      return React.createElement(\"div\", {\n        className: \"Card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, name), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.state.species), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Featured in:\", React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.state.films.map(function (film, i) {\n        return React.createElement(\"li\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, film);\n      }))));\n    }\n  }]);\n\n  return CardComponent;\n}(Component);\n\nexport default CardComponent;","map":{"version":3,"sources":["/home/pablow/Desktop/wbk/react-swapi-app/src/CardComponent.js"],"names":["React","Component","CardComponent","state","species","films","fetch","props","then","resp","json","setState","name","catch","err","console","log","filmsArray","fetchFilms","map","filmUrl","i","res","data","push","episode_id","title","sort","Promise","all","promisesArray","film"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;IAKMC,a;;;;;AACJ,2BAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CAAC,qBAAD,CADE;AAEXC,MAAAA,KAAK,EAAE,CAAC,kBAAD;AAFI,KAAb;AAFY;AAMb;;;;wCAEmB;AAAA;;AAClB;AACEC,MAAAA,KAAK,CAAC,KAAKC,KAAL,CAAWH,OAAX,CAAmB,CAAnB,CAAD,CAAL,CACGI,IADH,CACQ,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OADZ,EAEGF,IAFH,CAEQ,UAAAE,IAAI;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAACP,UAAAA,OAAO,EAAEM,IAAI,CAACE;AAAf,SAAd,CAAJ;AAAA,OAFZ,EAGGC,KAHH,CAGS,UAACC,GAAD;AAAA,eAASC,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,GAAtC,CAAT;AAAA,OAHT,EAFgB,CAOlB;;AAEA,UAAMG,UAAU,GAAG,EAAnB;AAEA,UAAMC,UAAU,GAAG,KAAKX,KAAL,CAAWF,KAAX,CAAiBc,GAAjB,CAAqB,UAACC,OAAD,EAAUC,CAAV;AAAA,eAAgBf,KAAK,CAACc,OAAD,CAAL,CACnDZ,IADmD,CAC9C,UAAAc,GAAG;AAAA,iBAAIA,GAAG,CAACZ,IAAJ,EAAJ;AAAA,SAD2C,EAEnDF,IAFmD,CAE9C,UAAAe,IAAI,EAAI;AACZN,UAAAA,UAAU,CAACO,IAAX,YAAoBD,IAAI,CAACE,UAAzB,gBAAyCF,IAAI,CAACG,KAA9C;AACAT,UAAAA,UAAU,CAACU,IAAX;AACD,SALmD,CAAhB;AAAA,OAArB,CAAnB;AAOAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ,EACKV,IADL,CACU,UAAAsB,aAAa,EAAI;AAAE,QAAA,MAAI,CAACnB,QAAL,CAAc;AAACN,UAAAA,KAAK,EAACY;AAAP,SAAd;AAAmC,OADhE,EAEKJ,KAFL,CAEW,UAACC,GAAD;AAAA,eAASC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB,CAAT;AAAA,OAFX;AAID;;;6BAKQ;AAAA,UACCF,IADD,GACU,KAAKL,KADf,CACCK,IADD;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,IAAN,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKT,KAAL,CAAWC,OAAjB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKD,KAAL,CAAWE,KAAX,CAAiBc,GAAjB,CAAqB,UAACY,IAAD,EAAOV,CAAP;AAAA,eACrB;AAAI,UAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACIU,IADJ,CADqB;AAAA,OAArB,CADJ,CADJ,CAHF,CADF;AAeD;;;;EAtDyB9B,S;;AA0D5B,eAAeC,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\n\n\nclass CardComponent extends Component {\n  constructor() {\n    super()\n    this.state = {\n      species: ['Fetching species...'],\n      films: ['Loading films...']\n    }\n  }\n\n  componentDidMount() {\n    // SPECIES //\n      fetch(this.props.species[0])\n        .then(resp => resp.json())\n        .then(json => this.setState({species: json.name}))\n        .catch((err) => console.log('ERROR FETCHING SPECIES', err))\n\n    // FILMS //\n\n    const filmsArray = [];\n\n    const fetchFilms = this.props.films.map((filmUrl, i) => fetch(filmUrl)\n        .then(res => res.json())\n        .then(data => {\n          filmsArray.push(`0${data.episode_id} - ${data.title}`);\n          filmsArray.sort();\n        }));\n\n    Promise.all(fetchFilms)\n        .then(promisesArray => { this.setState({films:filmsArray}) })\n        .catch((err) => console.log('error: ', err))\n\n  }\n\n\n\n\n  render() {\n    const { name } = this.props;\n\n    return (\n      <div className='Card'>\n        <h3>{ name }</h3>\n        <h4>{ this.state.species }</h4>\n        <div>Featured in:\n            <ul>\n              { this.state.films.map((film, i) => (\n                <li key={i}>\n                  { film }\n                </li>\n              ))}\n            </ul>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default CardComponent;\n"]},"metadata":{},"sourceType":"module"}