{"map":"{\"version\":3,\"sources\":[\"/home/pablow/Desktop/wbk/react-swapi-app/src/CardComponent.js\",\"/home/pablow/Desktop/wbk/react-swapi-app/src/CardContainer.js\",\"/home/pablow/Desktop/wbk/react-swapi-app/src/NavBar.js\",\"/home/pablow/Desktop/wbk/react-swapi-app/src/Header.js\",\"/home/pablow/Desktop/wbk/react-swapi-app/src/Loader.js\",\"/home/pablow/Desktop/wbk/react-swapi-app/src/About.js\",\"/home/pablow/Desktop/wbk/react-swapi-app/src/App.js\",\"/home/pablow/Desktop/wbk/react-swapi-app/src/serviceWorker.js\",\"/home/pablow/Desktop/wbk/react-swapi-app/src/index.js\"],\"names\":[\"CardComponent\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"species\",\"films\",\"_this2\",\"fetch\",\"props\",\"then\",\"resp\",\"json\",\"setState\",\"name\",\"catch\",\"err\",\"console\",\"log\",\"filmsArray\",\"fetchFilms\",\"map\",\"filmUrl\",\"i\",\"res\",\"data\",\"push\",\"concat\",\"episode_id\",\"title\",\"sort\",\"Promise\",\"all\",\"promisesArray\",\"react_default\",\"a\",\"createElement\",\"className\",\"film\",\"key\",\"Component\",\"CardContainer\",\"_ref\",\"cardList\",\"user\",\"src_CardComponent\",\"url\",\"navLiStyles\",\"listStyleType\",\"NavBar\",\"style\",\"onClick\",\"handleClick\",\"Header\",\"Loader\",\"About\",\"visibility\",\"display\",\"href\",\"target\",\"App\",\"api_data\",\"isVisible\",\"handleAboutClick\",\"bind\",\"assertThisInitialized\",\"urlsArray\",\"toString\",\"charsData\",\"charsFetch\",\"results\",\"event\",\"_this$state\",\"src_NavBar\",\"src_Header\",\"length\",\"src_Loader\",\"src_CardContainer\",\"src_About\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport './App.css';\\n\\n\\n\\n\\nclass CardComponent extends Component {\\n  constructor() {\\n    super()\\n    this.state = {\\n      species: ['Fetching species...'],\\n      films: ['Loading films...']\\n    }\\n  }\\n\\n  componentDidMount() {\\n    // SPECIES //\\n      fetch(this.props.species[0])\\n        .then(resp => resp.json())\\n        .then(json => this.setState({species: json.name}))\\n        .catch((err) => console.log('ERROR FETCHING SPECIES', err))\\n\\n    // FILMS //\\n\\n    const filmsArray = [];\\n\\n    const fetchFilms = this.props.films.map((filmUrl, i) => fetch(filmUrl)\\n        .then(res => res.json())\\n        .then(data => {\\n          filmsArray.push(`0${data.episode_id} - ${data.title}`);\\n          filmsArray.sort();\\n        }));\\n\\n    Promise.all(fetchFilms)\\n        .then(promisesArray => { this.setState({films:filmsArray}) })\\n        .catch((err) => console.log('error: ', err))\\n\\n  }\\n\\n\\n\\n\\n  render() {\\n    const { name } = this.props;\\n\\n    return (\\n      <div className='Card'>\\n        <h3>{ name }</h3>\\n        <h4>{ this.state.species }</h4>\\n        <div>Featured in:\\n            <ul>\\n              { this.state.films.map((film, i) => (\\n                <li key={i}>\\n                  { film }\\n                </li>\\n              ))}\\n            </ul>\\n        </div>\\n      </div>\\n    )\\n  }\\n\\n}\\n\\nexport default CardComponent;\\n\",\"import React from 'react';\\nimport CardComponent from './CardComponent';\\nimport './App.css';\\n\\nconst CardContainer = ({ data }) => {\\n  const cardList = data.map((user, i) => {\\n    return (\\n      <CardComponent\\n        key={user.url}\\n        name={user.name}\\n        species={user.species}\\n        films={user.films}\\n      />\\n    )}\\n  )\\n  return (\\n    <section className='CardContainer'>\\n      {cardList}\\n    </section>\\n    \\n  );\\n}\\n\\nexport default CardContainer;\\n\",\"import React from 'react';\\nimport './App.css';\\n\\nconst navLiStyles = {\\n  listStyleType: 'none'\\n}\\n\\n\\n\\nconst NavBar = (props) => {\\n  return (\\n    <nav className='Nav'>\\n      <ul style={navLiStyles}>\\n        <li>Home</li>\\n        <li>Search</li>\\n        <li onClick={props.handleClick}>About</li>\\n      </ul>\\n    </nav>\\n  )\\n}\\n\\nexport default NavBar;\\n\",\"import React from 'react';\\nimport './App.css';\\n\\nconst Header = () => {\\n  return (\\n\\n      <h1 className='Header'>Star Wars</h1>\\n\\n  )\\n}\\n\\nexport default Header;\\n\",\"import React from 'react';\\nimport './App.css'\\n\\nconst Loader = () => {\\n    return (\\n        <div className=\\\"wrapper\\\">\\n            <h3>Loading Cards...</h3>\\n            <div className=\\\"spinner spinner-1\\\"></div>\\n        </div>\\n    );\\n}\\n\\n\\nexport default Loader;\\n\",\"import React from 'react';\\nimport './App.css';\\n\\nconst About = (props) => {\\n  return (\\n    <div\\n      className=\\\"About\\\"\\n      style={ props.visibility ? {display: 'flex'} : {display: 'none'}}\\n      onClick={props.handleClick}>\\n        <h1>Star Wars App</h1>\\n        <h3>A project for ZeroToMastery course</h3>\\n        <hr/>\\n        <p>\\n          As part of <strong>Andrei Neagoie</strong>'s course, I built this simple page App, using <strong>ReactJS</strong> and <strong>SWAPI</strong>. Basic functionality at the moment. Hope to enhance it eventually...\\n        </p>\\n        <footer>\\n          <h4>Follow me:</h4>\\n          <div className=\\\"links\\\">\\n            <a href=\\\"https://twitter.com/wbkpablo\\\" target=\\\"_blank\\\">Twitter</a>\\n            <a href=\\\"https://github.com/pablowbk\\\" target=\\\"_blank\\\">GitHub</a>\\n            <a href=\\\"https://codepen.io/pablowbk/\\\" target=\\\"_blank\\\">CodePen</a>\\n          </div>\\n        </footer>\\n    </div>\\n  )\\n}\\n\\nexport default About;\\n\",\"import React, {Component} from 'react';\\nimport CardContainer from './CardContainer';\\nimport NavBar from './NavBar';\\nimport Header from './Header';\\nimport Loader from './Loader';\\nimport About from './About';\\nimport './App.css';\\n\\n// const api_data = [];\\n\\nclass App extends Component {\\n  constructor(props) {\\n    super(props)\\n    this.state = {\\n      data: [],\\n      api_data: [],\\n      isVisible: false\\n    };\\n\\n    this.handleAboutClick = this.handleAboutClick.bind(this);\\n  }\\n\\n  componentDidMount() {\\n    // OLD WAY - only gets back the first page results\\n    // const url = 'https://swapi.co/api/people/';\\n    //\\n    // fetch(url)\\n    //   .then(response => response.json())\\n    //   .then(people => this.setState( { data: people.results } ))\\n\\n    // New, but messy, way...\\n    const urlsArray = [];\\n\\n    for(let i = 1; i < 10; i++) {\\n      urlsArray.push('https://swapi.co/api/people/?page=' + i.toString());\\n    }\\n\\n    const charsData = [];\\n\\n    const charsFetch = urlsArray.map(url => fetch(url)\\n        .then(res => res.json())\\n        .then(data => data.results.map(user => charsData.push(user)))\\n    );\\n\\n    Promise.all(charsFetch)\\n      .then(results => this.setState({api_data: charsData}))\\n      .catch((err) => console.log('ERROR, please check', err))\\n\\n  }\\n\\n  handleAboutClick(event) {\\n    this.setState({isVisible: !this.state.isVisible});\\n\\n  }\\n\\n\\n  render() {\\n    const { api_data, isVisible } = this.state;\\n    return (\\n      <div className='App'>\\n          <NavBar\\n            handleClick={this.handleAboutClick}\\n          />\\n          <Header />\\n          {\\n            api_data.length === 0\\n            ? <Loader /> //<h3>Loading Cards...</h3>\\n            : <h3>Cards Count: { api_data.length }</h3>\\n          }\\n          <CardContainer\\n            data={ api_data }\\n          />\\n          <About\\n            visibility={isVisible}\\n            handleClick={this.handleAboutClick}\\n          />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1:function(e,t,n){},10:function(e,t,n){e.exports=n(19)},16:function(e,t,n){},19:function(e,t,n){\"use strict\";n.r(t);var a=n(0),l=n.n(a),r=n(9),i=n.n(r),c=(n(16),n(3)),o=n(4),s=n(6),u=n(5),m=n(7),h=n(2),p=(n(1),function(e){function t(){var e;return Object(c.a)(this,t),(e=Object(s.a)(this,Object(u.a)(t).call(this))).state={species:[\"Fetching species...\"],films:[\"Loading films...\"]},e}return Object(m.a)(t,e),Object(o.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;fetch(this.props.species[0]).then(function(e){return e.json()}).then(function(t){return e.setState({species:t.name})}).catch(function(e){return console.log(\"ERROR FETCHING SPECIES\",e)});var t=[],n=this.props.films.map(function(e,n){return fetch(e).then(function(e){return e.json()}).then(function(e){t.push(\"0\".concat(e.episode_id,\" - \").concat(e.title)),t.sort()})});Promise.all(n).then(function(n){e.setState({films:t})}).catch(function(e){return console.log(\"error: \",e)})}},{key:\"render\",value:function(){var e=this.props.name;return l.a.createElement(\"div\",{className:\"Card\"},l.a.createElement(\"h3\",null,e),l.a.createElement(\"h4\",null,this.state.species),l.a.createElement(\"div\",null,\"Featured in:\",l.a.createElement(\"ul\",null,this.state.films.map(function(e,t){return l.a.createElement(\"li\",{key:t},e)}))))}}]),t}(a.Component)),f=function(e){var t=e.data.map(function(e,t){return l.a.createElement(p,{key:e.url,name:e.name,species:e.species,films:e.films})});return l.a.createElement(\"section\",{className:\"CardContainer\"},t)},d={listStyleType:\"none\"},E=function(e){return l.a.createElement(\"nav\",{className:\"Nav\"},l.a.createElement(\"ul\",{style:d},l.a.createElement(\"li\",null,\"Home\"),l.a.createElement(\"li\",null,\"Search\"),l.a.createElement(\"li\",{onClick:e.handleClick},\"About\")))},b=function(){return l.a.createElement(\"h1\",{className:\"Header\"},\"Star Wars\")},v=function(){return l.a.createElement(\"div\",{className:\"wrapper\"},l.a.createElement(\"h3\",null,\"Loading Cards...\"),l.a.createElement(\"div\",{className:\"spinner spinner-1\"}))},k=function(e){return l.a.createElement(\"div\",{className:\"About\",style:e.visibility?{display:\"flex\"}:{display:\"none\"},onClick:e.handleClick},l.a.createElement(\"h1\",null,\"Star Wars App\"),l.a.createElement(\"h3\",null,\"A project for ZeroToMastery course\"),l.a.createElement(\"hr\",null),l.a.createElement(\"p\",null,\"As part of \",l.a.createElement(\"strong\",null,\"Andrei Neagoie\"),\"'s course, I built this simple page App, using \",l.a.createElement(\"strong\",null,\"ReactJS\"),\" and \",l.a.createElement(\"strong\",null,\"SWAPI\"),\". Basic functionality at the moment. Hope to enhance it eventually...\"),l.a.createElement(\"footer\",null,l.a.createElement(\"h4\",null,\"Follow me:\"),l.a.createElement(\"div\",{className:\"links\"},l.a.createElement(\"a\",{href:\"https://twitter.com/wbkpablo\",target:\"_blank\"},\"Twitter\"),l.a.createElement(\"a\",{href:\"https://github.com/pablowbk\",target:\"_blank\"},\"GitHub\"),l.a.createElement(\"a\",{href:\"https://codepen.io/pablowbk/\",target:\"_blank\"},\"CodePen\"))))},g=function(e){function t(e){var n;return Object(c.a)(this,t),(n=Object(s.a)(this,Object(u.a)(t).call(this,e))).state={data:[],api_data:[],isVisible:!1},n.handleAboutClick=n.handleAboutClick.bind(Object(h.a)(Object(h.a)(n))),n}return Object(m.a)(t,e),Object(o.a)(t,[{key:\"componentDidMount\",value:function(){for(var e=this,t=[],n=1;n<10;n++)t.push(\"https://swapi.co/api/people/?page=\"+n.toString());var a=[],l=t.map(function(e){return fetch(e).then(function(e){return e.json()}).then(function(e){return e.results.map(function(e){return a.push(e)})})});Promise.all(l).then(function(t){return e.setState({api_data:a})}).catch(function(e){return console.log(\"ERROR, please check\",e)})}},{key:\"handleAboutClick\",value:function(e){this.setState({isVisible:!this.state.isVisible})}},{key:\"render\",value:function(){var e=this.state,t=e.api_data,n=e.isVisible;return l.a.createElement(\"div\",{className:\"App\"},l.a.createElement(E,{handleClick:this.handleAboutClick}),l.a.createElement(b,null),0===t.length?l.a.createElement(v,null):l.a.createElement(\"h3\",null,\"Cards Count: \",t.length),l.a.createElement(f,{data:t}),l.a.createElement(k,{visibility:n,handleClick:this.handleAboutClick}))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(l.a.createElement(g,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[10,2,1]]]);","extractedComments":[]}